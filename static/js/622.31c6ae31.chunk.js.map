{"version":3,"file":"static/js/622.31c6ae31.chunk.js","mappings":"yMACA,EAAgC,6BAAhC,EAAuE,uBAAvE,EAAsG,qBCAtG,EAAuB,wBAAvB,EAAqD,uBAArD,EAAuF,4BAAvF,EAAmI,iCAAnI,EAA6K,0B,gDCKvKA,GAAcC,EAAAA,EAAAA,GAAe,IAGnC,SAASC,EAAT,GAA0C,IAAtBC,EAAqB,EAArBA,aAAcC,EAAO,EAAPA,MACjC,OACC,kBAAMC,SAAUF,EAAcG,UAAWC,EAAzC,WACC,gBAAKD,UAAWC,EAAhB,UACC,SAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAeV,GAAcW,QAAQ,QAAQC,UAAWC,EAAAA,EAAcC,KAAK,QAAQC,YAAY,aAElH,gBAAKT,UAAWC,EAAhB,UACC,SAACC,EAAA,EAAD,CAAOC,SAAU,CAACC,EAAAA,EAAeV,GAAcW,QAAQ,QAAQC,UAAWC,EAAAA,EAAcG,KAAK,WAAWF,KAAK,WAAWC,YAAY,gBAErI,iBAAKT,UAAWC,EAAhB,WACC,SAACC,EAAA,EAAD,CAAOS,GAAG,WAAWL,UAAU,QAAQI,KAAK,WAAWF,KAAK,aAAaC,YAAY,cACrF,kBAAOG,QAAQ,WAAf,4BAEAd,GAAQ,gBAAKE,UAAWC,EAAhB,SAAwCH,IAAe,MAChE,mBAAQY,KAAK,SAASV,UAAWC,EAAjC,sBAGF,CAQD,MALAL,GAAYiB,EAAAA,EAAAA,GAAU,CACrBC,KAAM,SADKD,CAETjB,G,kDCtBGmB,EAAAA,SAAAA,IAAAA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,GAAAA,SAAAA,IAAAA,IAAAA,GAAAA,EAAAA,EAAAA,GAAAA,KAAAA,GAAAA,IAAAA,IAAAA,EAAAA,UAAAA,OAAAA,EAAAA,IAAAA,MAAAA,GAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAAAA,EAAAA,GAAAA,UAAAA,GAGJ,OAHIA,EAAAA,EAAAA,KAAAA,MAAAA,EAAAA,CAAAA,MAAAA,OAAAA,KACLC,MAAQ,SAAAC,GACP,EAAKC,MAAMC,WAAWF,EAASG,MAAOH,EAASI,SAAUJ,EAASK,WAClE,IAmBA,OAnBA,8BAGD,WACC,OAAGC,KAAKL,MAAMM,QACN,SAAC,KAAD,CAAUC,GAAG,cAKpB,iBAAMzB,UAAWC,EAAjB,UACC,gBAAKD,UAAU,YAAf,UACC,iBAAKA,UAAWC,EAAhB,WACC,eAAID,UAAWC,EAAf,oBACA,SAAC,EAAD,CAAWF,SAAUwB,KAAKP,cAK9B,OAtBID,CAAcW,EAAAA,WA+BpB,GAAeC,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KALC,SAAAC,GAAK,MAAK,CACjCL,OAAQK,EAAMC,KAAKN,OADS,GAKmB,CAACL,WAAAA,EAAAA,KAAjD,CAA+DJ,E,+ECvC/D,EAA+B,oCAA/B,EAA2E,6B,4BCE9DR,EAAe,SAAC,GAA8C,IAA7CwB,EAA4C,EAA5CA,MAA4C,IAArCC,KAAMC,EAA+B,EAA/BA,QAASnC,EAAsB,EAAtBA,MAAWoB,GAAW,YACnEgB,EAAWD,GAAWnC,EAG5B,OACC,iBAAKE,UAAS,UAAKC,EAAL,YAA6BiC,EAAWjC,EAAgB,IAAtE,WACC,SAACiB,EAAMb,SAAP,kBAAmB0B,GAAWb,KAC9B,0BAAOpB,MAGT,C,8ECbM,IAAMM,EAAgB,SAAA+B,GAAK,OAAIA,OAAQC,EAAY,mBAAxB,EAErBzC,EAAiB,SAAA0C,GAAS,OAAI,SAAAF,GAAK,OAAIA,EAAMG,OAASD,EAAf,wBAA4CA,EAA5C,iBAAkED,CAAtE,CAAT,C","sources":["webpack://react-test-1/./src/components/Login/Login.module.css?3530","webpack://react-test-1/./src/components/Login/LoginForm/LoginForm.module.css?1b2c","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","webpack://react-test-1/./src/components/common/FormsControls/FormsControls.module.css?eb50","components/common/FormsControls/FormsControls.jsx","utils/validators/validators.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"authorization\":\"Login_authorization__dXpDW\",\"wrapper\":\"Login_wrapper__BKSdK\",\"title\":\"Login_title__SjqR5\"};","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginForm_form__d1Ioo\",\"row\":\"LoginForm_row__evXfy\",\"checkbox\":\"LoginForm_checkbox__3NYdI\",\"summary_error\":\"LoginForm_summary_error__u1FAL\",\"button\":\"LoginForm_button__64hXh\"};","import classes from './LoginForm.module.css';\r\nimport {reduxForm, Field} from 'redux-form';\r\nimport {fieldCreator} from '../../common/FormsControls/FormsControls';\r\nimport {requiredField, maxLengthThunk} from '../../../utils/validators/validators';\r\n\r\n\r\nconst maxLength25 = maxLengthThunk(25);\r\n\r\n\r\nfunction LoginForm({handleSubmit, error}){\r\n\treturn(\r\n\t\t<form onSubmit={handleSubmit} className={classes.form}>\r\n\t\t\t<div className={classes.row}>\r\n\t\t\t\t<Field validate={[requiredField, maxLength25]} element='input' component={fieldCreator} name='email' placeholder='Email'/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.row}>\r\n\t\t\t\t<Field validate={[requiredField, maxLength25]} element='input' component={fieldCreator} type='password' name='password' placeholder='Password'/>\r\n\t\t\t</div>\r\n\t\t\t<div className={classes.checkbox}>\r\n\t\t\t\t<Field id='checkbox' component='input' type='checkbox' name='rememberMe' placeholder='Password'/>\r\n\t\t\t\t<label htmlFor='checkbox'>Remember me</label>\r\n\t\t\t</div>\r\n\t\t\t{error ? <div className={classes.summary_error}>{error}</div> : null}\r\n\t\t\t<button type='submit' className={classes.button}>Log in</button>\r\n\t\t</form>\r\n\t);\r\n}\r\n\r\n\r\nLoginForm = reduxForm({\r\n\tform: 'login'\r\n})(LoginForm)\r\n\r\n\r\nexport default LoginForm;","import classes from './Login.module.css';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport {loginThunk} from '../../Redux/auth-reducer';\r\nimport {connect} from 'react-redux';\r\nimport React from 'react';\r\nimport {compose} from 'redux';\r\nimport {Navigate} from 'react-router-dom';\r\n\r\n\r\nclass Login extends React.Component{\r\n\tlogin = formData => {\r\n\t\tthis.props.loginThunk(formData.email, formData.password, formData.rememberMe);\r\n\t}\r\n\r\n\r\n\trender(){\r\n\t\tif(this.props.isAuth){\r\n\t\t\treturn <Navigate to='/profile'/>\r\n\t\t} \r\n\t\t\r\n\r\n\t\treturn(\r\n\t\t\t<main className={classes.authorization}>\r\n\t\t\t\t<div className='container'>\r\n\t\t\t\t\t<div className={classes.wrapper}>\r\n\t\t\t\t\t\t<h1 className={classes.title}>Login</h1>\r\n\t\t\t\t\t\t<LoginForm onSubmit={this.login}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</main>\r\n\t\t)\r\n\t}\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n\tisAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(connect(mapStateToProps, {loginThunk}))(Login);","// extracted by mini-css-extract-plugin\nexport default {\"form_control\":\"FormsControls_form_control__xys1c\",\"error\":\"FormsControls_error__lLL98\"};","import classes from './FormsControls.module.css';\r\n\r\n\r\nexport const fieldCreator = ({input, meta:{touched, error}, ...props}) => {\r\n\tconst hasError = touched && error;\r\n\r\n\r\n\treturn(\r\n\t\t<div className={`${classes.form_control} ${hasError ? classes.error : ''}`}>\r\n\t\t\t<props.element {...input} {...props}/>\r\n\t\t\t<span>{error}</span>\r\n\t\t</div>\r\n\t)\r\n}","export const requiredField = value => value ? undefined : 'Field is required';\r\n\r\nexport const maxLengthThunk = maxLength => value => value.length > maxLength ? `Max length is ${maxLength} sybmlos` : undefined;"],"names":["maxLength25","maxLengthThunk","LoginForm","handleSubmit","error","onSubmit","className","classes","Field","validate","requiredField","element","component","fieldCreator","name","placeholder","type","id","htmlFor","reduxForm","form","Login","login","formData","props","loginThunk","email","password","rememberMe","this","isAuth","to","React","compose","connect","state","auth","input","meta","touched","hasError","value","undefined","maxLength","length"],"sourceRoot":""}